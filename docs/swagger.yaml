openapi: 3.1.0
info:
  title: Pet Community Platform API
  description: API documentation for Pet Community Platform
  version: 1.0.0

tags:
  - name: auth
    description: Authentication endpoints
  - name: users
    description: User management
  - name: pets
    description: Pet management
  - name: posts
    description: Post management
  - name: adoptionPost
    description: Adoption post management
  - name: messages
    description: Message management
  - name: payments
    description: Payment management
  - name: campaigns
    description: Campaign management
  - name: donations
    description: Donation management
  - name: notifications
    description: Notification management
  - name: blogs
    description: Blog management

paths:
  # Auth Routes
  /auth/register:
    post:
      tags: [auth]
      summary: Register new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegisterInput'
      responses:
        '201':
          $ref: '#/components/responses/AuthSuccess'

  /auth/login:
    post:
      tags: [auth]
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          $ref: '#/components/responses/AuthSuccess'

  /auth/refresh-token:
    post:
      tags: [auth]
      summary: Refresh access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [refresh_token]
              properties:
                refresh_token:
                  type: string
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string

  # Pet Routes
  /pets:
    get:
      tags: [pets]
      summary: Get all pets
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: List of pets
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Pet'
                  pagination:
                    $ref: '#/components/schemas/Pagination'

  /pets/add:
    post:
      tags: [pets]
      summary: Add new pet
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PetInput'
      responses:
        '201':
          description: Pet created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'

  /pets/update:
    put:
      tags: [pets]
      summary: Update pet
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PetUpdateInput'
      responses:
        '200':
          description: Pet updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'

  # Adoption Post Routes
  /adoption-post:
    post:
      tags: [adoptionPost]
      summary: Create adoption post
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdoptionPostInput'
      responses:
        '201':
          description: Adoption post created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdoptionPost'

components:
  schemas:
    UserRegisterInput:
      type: object
      required:
        - email
        - password
        - username
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 8
        username:
          type: string

    PetInput:
      type: object
      required:
        - name
        - breed
        - age
        - health_status
        - description
        - size
        - coat
        - temperament
        - vaccinated
      properties:
        name:
          type: string
        breed:
          type: string
        age:
          type: number
        health_status:
          type: string
          enum: [Healthy, Sick, Recovering, Injured]
        description:
          type: string
        image_url:
          type: array
          items:
            type: string
            format: binary
        size:
          type: string
        coat:
          type: string
        temperament:
          type: string
        vaccinated:
          type: boolean

    PetUpdateInput:
      type: object
      properties:
        name:
          type: string
        breed:
          type: string
        age:
          type: number
        health_status:
          type: string
          enum: [Healthy, Sick, Recovering, Injured]
        description:
          type: string
        image_url:
          type: array
          items:
            type: string
            format: binary
        size:
          type: string
        coat:
          type: string
        temperament:
          type: string
        vaccinated:
          type: boolean

    Pet:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        breed:
          type: string
        age:
          type: number
        health_status:
          type: string
          enum: [Healthy, Sick, Recovering, Injured]
        description:
          type: string
        image_url:
          type: array
          items:
            type: string
        size:
          type: string
        coat:
          type: string
        temperament:
          type: string
        vaccinated:
          type: boolean
        owner:
          type: string
        submittedBy:
          type: string
        isApproved:
          type: boolean
        isAdopted:
          type: boolean
        adoptionRequests:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    AdoptionPost:
      type: object
      properties:
        id:
          type: string
        caption:
          type: string
        image:
          type: array
          items:
            type: string
        video:
          type: array
          items:
            type: string
        pet:
          $ref: '#/components/schemas/Pet'
        adopt_status:
          type: string
          enum: [Available, Pending, Adopted]
        author:
          type: string
        likes:
          type: array
          items:
            type: string
        tags:
          type: array
          items:
            type: string
        isDeleted:
          type: boolean
        isBlocked:
          type: boolean
        isApproved:
          type: boolean
        isRejected:
          type: boolean
        isHidden:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Pagination:
      type: object
      properties:
        currentPage:
          type: integer
        totalPages:
          type: integer
        totalItems:
          type: integer
        limit:
          type: integer

    AdoptionPostInput:
      type: object
      required:
        - caption
        - pet
      properties:
        caption:
          type: string
        image:
          type: array
          items:
            type: string
            format: binary
        video:
          type: array
          items:
            type: string
            format: binary
        pet:
          type: string
          description: Pet ID
        tags:
          type: array
          items:
            type: string
          description: Array of user IDs to tag

  responses:
    AuthSuccess:
      description: Authentication successful
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
              status:
                type: integer
              data:
                type: object
                properties:
                  access_token:
                    type: string
                  refresh_token:
                    type: string
                  email_verify_token:
                    type: string

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

servers:
  - url: http://localhost:3000/api/v1
    description: Development server
